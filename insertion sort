#include <iostream>
#include <vector>
#include <chrono>
#include <cstdlib>
#include <ctime>

void insertionSort(std::vector<int>& arr) {
    int n = arr.size();
    for (int i = 1; i < n; ++i) {
        int key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}

int main() {
    srand(static_cast<unsigned int>(time(nullptr)));

    std::vector<int> arraySizes = {100, 500, 1000, 2000, 5000};
    
    for (int size : arraySizes) {
        std::vector<int> arr(size);

        
        for (int i = 0; i < size; ++i) {
            arr[i] = rand() % 100000;
        }
        
        
        auto startTime = std::chrono::high_resolution_clock::now();
        insertionSort(arr);
        auto endTime = std::chrono::high_resolution_clock::now();
        std::chrono::duration<double> elapsedSeconds = endTime - startTime;
        
        std::cout << "Sorted array of size " << size << " in " << elapsedSeconds.count() << " seconds." << std::endl;
    }
    
    return 0;
}

